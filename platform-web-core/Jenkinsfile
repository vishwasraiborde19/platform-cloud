pipeline {
	agent any
	stages {
		stage('Checkout') {
			steps {
				// Checkout source code from the repository
				JENKINS_CREDENTIALS = input message: 'Enter Jenkins credenctials', parameters: [string(defaultValue: '', description: 'JENKINS_CREDENTIALS ', name: 'JENKINS_CREDENTIALS')]
				BRANCH_NAME = input message: 'Enter branch e', parameters: [string(defaultValue: '', description: 'BRANCH_NAME ', name: 'BRANCH_NAME')]
				git url: 'https://github.com/vishwasraiborde19/platform-cloud.git', credentialsId: $JENKINS_CREDENTIALS, branch: $BRANCH_NAME
			}
		}

		stage('Build Maven Project') {
			steps {
				dir(path: 'platform-web-core') {
					sh 'mvn clean package'
				}
			}
		}

		stage('Build and Tag Docker Image') {
			steps {
				dir(path: 'platform-web-core') {
					sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
					sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest"
				}
			}
		}

		stage('Push Docker Image') {
			steps {
				// Authenticate with Docker Hub or another registry
				script {
					// Prompt for Docker username and password as user input
					DOCKER_USERNAME = input message: 'Enter Docker Username', parameters: [string(defaultValue: '', description: 'Docker Username', name: 'DOCKER_USERNAME')]
					DOCKER_PASSWORD = input message: 'Enter Docker Password', parameters: [password(defaultValue: '', description: 'Docker Password', name: 'DOCKER_PASSWORD')]

					// Login to Docker registry
					sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
				}


				// Push the Docker image
				sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
				sh "docker push ${DOCKER_IMAGE}:latest"
			}
		}

	}
	environment {
		DOCKER_IMAGE = 'vishwasraiborde19/your-image'
		DOCKER_TAG = "v${BUILD_NUMBER}"
	}
	post {
		always {
			cleanWs()
		}

		success {
			echo "Pipeline completed successfully! Docker image ${DOCKER_IMAGE}:${DOCKER_TAG} has been pushed."
		}

	}
}