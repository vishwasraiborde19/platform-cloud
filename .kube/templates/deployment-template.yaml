apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-first-app
  namespace: default
  labels:
    app: my-first-app
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-first-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: my-first-app
    spec:
      containers:
        - name: my-first-app-container
          image: my-first-app:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: ENV_VAR_NAME
              value: "example_value"
            - name: ANOTHER_ENV_VAR
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: some-key
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /data
              name: my-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /startup
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: my-volume
          persistentVolumeClaim:
            claimName: my-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: another-app
              topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: my-first-app
                topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "key1"
          operator: "Equal"
          value: "value1"
          effect: "NoSchedule"
        - key: "key2"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 3600
      imagePullSecrets:
        - name: my-docker-registry
      serviceAccountName: my-service-account
      terminationGracePeriodSeconds: 30
