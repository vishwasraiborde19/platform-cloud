apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: lms-user-mgmt-service
    tier: backend
  name: lms-user-mgmt-service
  namespace: platform
spec:
  progressDeadlineSeconds: 60
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: lms-user-mgmt-service
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lms-user-mgmt-service
    spec:
      containers:
      - image: vishwasraiborde19/lms-user-mgmt-service-img:latest
        imagePullPolicy: Always
        name: lms-user-mgmt-service-container
        envFrom:
          - configMapRef:
              name: lms-user-mgmt-service-cm
        ports:
        - containerPort: 6002
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        #Liveness probes determine when to restart a container. For example, liveness probes could catch a deadlock when an application is running but unable to make progress.
        #If a container fails its liveness probe repeatedly, the kubelet restarts the container
        livenessProbe:
          httpGet:
            port: 6002
            path: /health
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60

